<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wdkj.xyfund.dao.DictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.wdkj.xyfund.entity.Dictionary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="pcode" property="pcode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_other" property="isOther" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, code, type, pcode, status, is_other
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wdkj.xyfund.entity.DictionaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_dictionary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_dictionary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_dictionary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wdkj.xyfund.entity.DictionaryExample" >
    delete from t_dictionary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wdkj.xyfund.entity.Dictionary" useGeneratedKeys="true" keyProperty="id">
    insert into t_dictionary (name, code, 
      type, pcode, status, 
      is_other)
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{pcode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{isOther,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.wdkj.xyfund.entity.Dictionary" useGeneratedKeys="true" keyProperty="id">
    insert into t_dictionary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pcode != null" >
        pcode,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isOther != null" >
        is_other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="pcode != null" >
        #{pcode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isOther != null" >
        #{isOther,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_dictionary
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.pcode != null" >
        pcode = #{record.pcode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isOther != null" >
        is_other = #{record.isOther,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_dictionary
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      pcode = #{record.pcode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      is_other = #{record.isOther,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wdkj.xyfund.entity.Dictionary" >
    update t_dictionary
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="pcode != null" >
        pcode = #{pcode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isOther != null" >
        is_other = #{isOther,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wdkj.xyfund.entity.Dictionary" >
    update t_dictionary
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      pcode = #{pcode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      is_other = #{isOther,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <resultMap id="BaseResultMap1" type="com.wdkj.xyfund.controller.vo.DictionaryVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="pcode" property="pcode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_other" property="isOther" jdbcType="BIT" />
    <result column="other" property="other" jdbcType="VARCHAR" />
  </resultMap>
  
  
  
  <sql id="Base_Column_List1" >
    t1.name,t1.code,t1.type,t1.pcode,t1.status,t1.is_other,t.other
  </sql>
   <select id="selectService" resultMap="BaseResultMap1" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List1" />
    FROM t_dictionary t1 LEFT JOIN t_postulant_service_skill t ON t1.id = t.dictionary_id WHERE t1.type="service" AND t.postulant_id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectSkill" resultMap="BaseResultMap1" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List1" />
    FROM t_dictionary t1 LEFT JOIN t_postulant_service_skill t ON t1.id = t.dictionary_id WHERE t1.type="skill" AND t.postulant_id = #{id,jdbcType=INTEGER}
  </select>
  
</mapper>